// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model RefreshToken {
  id        String    @id @unique @default(uuid())
  token     String
  expiresIn DateTime  @map("expires_in")
  expiredAt DateTime? @map("expired_at")
  createdAt DateTime  @default(now()) @map("created_at")

  collaborator   Collaborator? @relation(fields: [collaboratorId], references: [id])
  collaboratorId String?       @map("collaborator_id")

  @@map("refresh_tokens")
}

enum RoleCollaborator {
  MASTER
  FULL_ACCESS
  EDITOR
  VIEWER
}

enum CollaboratorType {
  ADMINISTRATOR
  SELLER
  ATTENDANT
}

model Collaborator {
  id        String           @id @unique @default(uuid())
  name      String
  image     String?
  login     String           @unique
  password  String
  createdAt DateTime         @default(now()) @map("created_at")
  updatedAt DateTime?        @updatedAt @map("udpated_at")
  deletedAt DateTime?        @map("deleted_at")
  type      CollaboratorType @default(ATTENDANT)
  role      RoleCollaborator @default(EDITOR)

  refreshTokens RefreshToken[]

  @@map("collaborators")
}

model ProductCategory {
  id          String  @id @unique @default(uuid())
  name        String  @unique
  description String?

  createdAt DateTime  @default(now()) @map("created_at")
  deletedAt DateTime? @map("deleted_at")

  products Product[]

  @@map("product_categories")
}

enum UnitType {
  KG
  UN
  MT
  CM
  PL
  LT
}

model ProductVariant {
  id           String    @id @unique @default(uuid())
  name         String
  description  String?
  model        String?
  pricePerUnit Int       @map("price_per_unit")
  brand        String
  image        String?
  barCode      String    @unique @map("bar_code")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  unitType     UnitType  @map("unit_type")

  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId String  @map("product_id")

  productVariantInventories ProductVariantInventory[]

  @@map("product_variants")
}

model Product {
  id        String    @id @unique @default(uuid())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  productVariants   ProductVariant[]
  productCategories ProductCategory[]

  @@map("products")
}

model Inventory {
  id        String    @id @unique @default(uuid())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  productVariantInventories ProductVariantInventory[]

  @@map("inventories")
}

model ProductVariantInventory {
  id        String    @id @unique @default(uuid())
  quantity  Int
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productVariantId String         @map("product_variant_id")

  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  inventoryId String    @map("inventory_id")

  @@map("products_variatns_inventories")
}
